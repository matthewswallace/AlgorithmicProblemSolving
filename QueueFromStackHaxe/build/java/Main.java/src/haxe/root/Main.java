// Generated by Haxe 3.4.0
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Main extends haxe.lang.HxObject
{
	public static void main(String[] args)
	{
		{
			//line 1 "?"
			haxe.root.Main.main();
		}
	}
	
	public Main(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Main()
	{
		//line 4 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		haxe.root.Main.__hx_ctor__Main(this);
	}
	
	
	public static void __hx_ctor__Main(haxe.root.Main __hx_this)
	{
		//line 5 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		haxe.root.Queue queue = new haxe.root.Queue();
		//line 7 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( "Is the old stack empty ? : " + haxe.root.Std.string(queue.isEmpty()) ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "Main.hx", "new"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (7) )) )}));
		//line 9 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		{
			//line 9 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
			int _g = 0;
			//line 9 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
			while (( _g < 10 ))
			{
				//line 9 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
				int i = _g++;
				//line 10 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
				queue.Enqueue(i);
				//line 11 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, ( "Enqueue : " + i ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "Main.hx", "new"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (11) )) )}));
			}
			
		}
		
		//line 14 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( "is the queue empty ? : " + haxe.root.Std.string(queue.isEmpty()) ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "Main.hx", "new"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (14) )) )}));
		//line 16 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		int size = queue.getSize();
		//line 18 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		if ( ! (queue.isEmpty()) ) 
		{
			//line 19 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
			int _g1 = 0;
			//line 19 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
			while (( _g1 < size ))
			{
				//line 19 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
				 ++ _g1;
				//line 20 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, ( "dequeing : " + queue.dequeue() ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "Main.hx", "new"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (20) )) )}));
			}
			
		}
		
		//line 24 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, ( "is the queue empty ? : " + haxe.root.Std.string(queue.isEmpty()) ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"Main", "Main.hx", "new"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (24) )) )}));
	}
	
	
	public static void main()
	{
		//line 31 "/Users/matthew.wallace/Dropbox/dev/java/QueueFromStackHaxe/src/Main.hx"
		new haxe.root.Main();
	}
	
	
}


